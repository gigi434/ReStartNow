generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id        Int      @id @default(autoincrement())
  userId    Int
  createdAt DateTime @default(now())
  answers   Json
  subsidyId Int
  Subsidy   Subsidy  @relation(fields: [subsidyId], references: [id])
  User      User     @relation(fields: [userId], references: [id])
}

model Information {
  id         Int                   @id @default(autoincrement())
  title      String
  body       String
  createdAt  DateTime              @default(now())
  updatedAt  DateTime
  authorId   Int
  importance informationImportance @default(Low)
  User       User                  @relation(fields: [authorId], references: [id])
}

model Municipality {
  id                  Int        @id @default(autoincrement())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime
  name                String     @unique
  municipalSymbolPath String
  prefectureId        Int
  isSupported         Boolean    @default(false)
  Prefecture          Prefecture @relation(fields: [prefectureId], references: [id])
  Subsidy             Subsidy[]
}

model Prefecture {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  name         String         @unique
  Municipality Municipality[]
}

model Question {
  id           Int      @id @default(autoincrement())
  answerType   String
  text         String
  createdAt    DateTime @default(now())
  updatedAt    DateTime
  subsidyId    Int
  propertyName String
  Subsidy      Subsidy  @relation(fields: [subsidyId], references: [id])
}

model Subsidy {
  id                      Int           @id @default(autoincrement())
  name                    String        @unique
  ageLimit                String
  applicationAddress      String
  applicationMethod       String
  applicationRequirements String
  description             String
  municipalityId          Int
  createdAt               DateTime      @default(now())
  updatedAt               DateTime
  amountReceived          String
  status                  subsidyStatus @default(Continuation)
  deadlineForReceipt      Int
  Answer                  Answer[]
  Question                Question[]
  Municipality            Municipality  @relation(fields: [municipalityId], references: [id])
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  createdAt      DateTime      @default(now())
  updatedAt      DateTime
  hashedPassword String
  role           Role          @default(User)
  Answer         Answer[]
  Information    Information[]
}

enum Role {
  User
  Admin
}

enum informationImportance {
  High
  Middle
  Low
}

enum subsidyStatus {
  Abolition
  Continuation
}
