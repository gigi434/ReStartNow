generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Answer {
  id         Int      @id @default(autoincrement())
  questionId Int
  userId     Int
  createdAt  DateTime @default(now())
  Question   Question @relation(fields: [questionId], references: [id])
  User       User     @relation(fields: [userId], references: [id])
}

model HousingSubsidyCondition {
  economicHardship        Boolean
  lossOfHousing           Boolean
  lossOfHousingRisk       Boolean
  employmentLoss          Boolean
  livingExpensesSupported Boolean
  jobSeeking              Boolean
  monthlyIncome           Int
  householdNumber         Int
  financialAssets         Int
  employmentMeasures      Boolean
  yakuzaMember            Boolean
  disabledPerson          Boolean
  id                      Int     @id @default(autoincrement())
  subsidyId               Int     @unique
  Subsidy                 Subsidy @relation(fields: [subsidyId], references: [id])
}

model Information {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model Municipality {
  id                  Int        @id @default(autoincrement())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime
  name                String     @unique
  municipalSymbolPath String
  prefectureId        Int
  isSupported         Boolean    @default(false)
  Prefecture          Prefecture @relation(fields: [prefectureId], references: [id])
  Subsidy             Subsidy[]
}

model Prefecture {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime
  name         String         @unique
  Municipality Municipality[]
}

model Question {
  id         Int      @id @default(autoincrement())
  answerType String
  text       String
  createdAt  DateTime @default(now())
  updatedAt  DateTime
  subsidyId  Int
  Answer     Answer[]
  Subsidy    Subsidy  @relation(fields: [subsidyId], references: [id])
}

model Subsidy {
  id                      Int                      @id @default(autoincrement())
  name                    String                   @unique
  ageLimit                String
  applicationAddress      String
  applicationMethod       String
  applicationRequirements String
  description             String
  municipalityId          Int
  createdAt               DateTime                 @default(now())
  updatedAt               DateTime
  amountReceived          Int[]
  status                  subsidyStatus            @default(Continuation)
  deadlineForReceipt      Int
  HousingSubsidyCondition HousingSubsidyCondition?
  Question                Question[]
  Municipality            Municipality             @relation(fields: [municipalityId], references: [id])
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime
  hashedPassword String
  role           Role     @default(User)
  Answer         Answer[]
}

enum Role {
  User
  Admin
}

enum subsidyStatus {
  Abolition
  Continuation
}
