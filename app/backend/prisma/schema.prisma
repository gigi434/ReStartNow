// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// お知らせ
model Information {
  id        Int      @id @default(autoincrement())
  title     String
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ユーザー
model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  hashedPassword String
  answers        Answer[]
}

// 市町区村
model Municipality {
  id                  Int        @id @default(autoincrement())
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  name                String     @unique
  municipalSymbolPath String
  prefectureId        Int
  prefecture          Prefecture @relation(fields: [prefectureId], references: [id])
  subsidies           Subsidy[]
  Question            Question[]
}

// 都道府県
model Prefecture {
  id             Int            @id @default(autoincrement())
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  name           String         @unique
  municipalities Municipality[]
}

// 助成金
model Subsidy {
  id                      Int      @id @default(autoincrement())
  name                    String   @unique
  deadlineForReceipt      DateTime // 受給期限
  ageLimit                String // 年齢制限
  amountReceived          Int // 受給額
  applicationAddress      String // 申請先
  applicationMethod       String // 申請方法
  applicationRequirements String // 申請条件
  description             String // 説明
  status                  String // 助成金の更新・廃止などの状態
  municipalityId          Int
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt

  municipality Municipality @relation(fields: [municipalityId], references: [id])
}

// 一問一答の質問
model Question {
  id             Int          @id @default(autoincrement())
  answerType     String
  text           String
  manicipalityId Int
  manicipality   Municipality @relation(fields: [manicipalityId], references: [id])
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  Answer         Answer[]
}

// ユーザーの答えを保存するテーブル
model Answer {
  id         Int      @id @default(autoincrement())
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  createdAt  DateTime @default(now())
}
